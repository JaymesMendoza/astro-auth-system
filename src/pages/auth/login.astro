---
import Layout from '@/layouts/Layout.astro';
import Navigation from '@/components/layout/Navigation.astro';
import Card from '@/components/ui/Card.astro';
import Input from '@/components/ui/Input.astro';
import Button from '@/components/ui/Button.astro';
import { getAuthContext } from '@/utils/auth';

// Redirect if already authenticated
const auth = await getAuthContext(Astro);
if (auth.isAuthenticated) {
  return Astro.redirect('/dashboard');
}
---

<Layout title="Login - AuthSystem">
  <Navigation auth={auth} />
  
  <main class="min-h-screen bg-gray-50 dark:bg-gray-900 flex flex-col justify-center py-12 sm:px-6 lg:px-8">
    <div class="sm:mx-auto sm:w-full sm:max-w-md">
      <h2 class="mt-6 text-center text-3xl font-bold text-gray-900 dark:text-white">
        Sign in to your account
      </h2>
      <p class="mt-2 text-center text-sm text-gray-600 dark:text-gray-400">
        Or
        <a href="/auth/register" class="font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400">
          create a new account
        </a>
      </p>
    </div>

    <div class="mt-8 sm:mx-auto sm:w-full sm:max-w-md">
      <Card title="Login" class="py-8 px-4 shadow sm:rounded-lg sm:px-10">
        <form id="login-form" class="space-y-6">
          <Input
            id="email"
            name="email"
            type="email"
            label="Email address"
            placeholder="Enter your email"
            required
          />

          <Input
            id="password"
            name="password"
            type="password"
            label="Password"
            placeholder="Enter your password"
            required
          />

          <div class="flex items-center justify-between">
            <div class="flex items-center">
              <input
                id="remember-me"
                name="remember-me"
                type="checkbox"
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label for="remember-me" class="ml-2 block text-sm text-gray-900 dark:text-gray-300">
                Remember me
              </label>
            </div>

            <div class="text-sm">
              <a href="/auth/forgot-password" class="font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400">
                Forgot your password?
              </a>
            </div>
          </div>

          <div id="error-message" class="hidden">
            <div class="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md p-4">
              <div class="flex">
                <div class="flex-shrink-0">
                  <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                  </svg>
                </div>
                <div class="ml-3">
                  <p class="text-sm text-red-800 dark:text-red-200" id="error-text"></p>
                </div>
              </div>
            </div>
          </div>

          <Button 
            type="submit" 
            variant="primary" 
            class="w-full"
            id="submit-button"
          >
            Sign in
          </Button>
        </form>
      </Card>
    </div>
  </main>

  <script>
    const form = document.getElementById('login-form') as HTMLFormElement;
    const errorMessage = document.getElementById('error-message') as HTMLElement;
    const errorText = document.getElementById('error-text') as HTMLElement;
    const submitButton = document.getElementById('submit-button') as HTMLButtonElement;

    function showError(message: string) {
      errorText.textContent = message;
      errorMessage.classList.remove('hidden');
    }

    function hideError() {
      errorMessage.classList.add('hidden');
    }

    function setLoading(loading: boolean) {
      if (loading) {
        submitButton.disabled = true;
        submitButton.innerHTML = `
          <svg class="mr-2 h-4 w-4 animate-spin" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          Signing in...
        `;
      } else {
        submitButton.disabled = false;
        submitButton.innerHTML = 'Sign in';
      }
    }

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      hideError();
      setLoading(true);

      const formData = new FormData(form);
      const data = {
        email: formData.get('email') as string,
        password: formData.get('password') as string,
        rememberMe: formData.get('remember-me') === 'on',
      };

      try {
        const response = await fetch('/api/auth/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        });

        const result = await response.json();

        if (response.ok && result.success) {
          // Redirect to dashboard on success
          window.location.href = '/dashboard';
        } else {
          showError(result.error || 'Login failed. Please try again.');
        }
      } catch (error) {
        showError('Network error. Please check your connection and try again.');
      } finally {
        setLoading(false);
      }
    });
  </script>
</Layout>