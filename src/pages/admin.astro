---
import Layout from '@/layouts/Layout.astro';
import Navigation from '@/components/layout/Navigation.astro';
import Card from '@/components/ui/Card.astro';
import Button from '@/components/ui/Button.astro';
import { getAuthContext } from '@/utils/auth';

// This page requires admin authentication (enforced by middleware)
const auth = await getAuthContext(Astro);

// Just for extra safety, though middleware should handle this
if (!auth.isAuthenticated || !auth.user || !auth.isAdmin) {
  return Astro.redirect('/dashboard');
}

const user = auth.user;
---

<Layout title="Admin Panel - AuthSystem">
  <Navigation auth={auth} />
  
  <main class="min-h-screen bg-gray-50 dark:bg-gray-900">
    <div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
      <!-- Header -->
      <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Admin Panel</h1>
        <p class="mt-1 text-sm text-gray-600 dark:text-gray-400">
          Manage users, monitor system activity, and configure settings.
        </p>
      </div>

      <!-- Quick Stats -->
      <div class="grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4 mb-8">
        <Card class="bg-white dark:bg-gray-800">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="w-8 h-8 bg-blue-100 dark:bg-blue-900 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-blue-600 dark:text-blue-400" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z" />
                </svg>
              </div>
            </div>
            <div class="ml-5 w-0 flex-1">
              <dl>
                <dt class="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">
                  Total Users
                </dt>
                <dd id="total-users" class="text-lg font-medium text-gray-900 dark:text-white">
                  Loading...
                </dd>
              </dl>
            </div>
          </div>
        </Card>

        <Card class="bg-white dark:bg-gray-800">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="w-8 h-8 bg-green-100 dark:bg-green-900 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-green-600 dark:text-green-400" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                </svg>
              </div>
            </div>
            <div class="ml-5 w-0 flex-1">
              <dl>
                <dt class="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">
                  Active Users
                </dt>
                <dd id="active-users" class="text-lg font-medium text-gray-900 dark:text-white">
                  Loading...
                </dd>
              </dl>
            </div>
          </div>
        </Card>

        <Card class="bg-white dark:bg-gray-800">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="w-8 h-8 bg-purple-100 dark:bg-purple-900 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-purple-600 dark:text-purple-400" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z" clip-rule="evenodd" />
                </svg>
              </div>
            </div>
            <div class="ml-5 w-0 flex-1">
              <dl>
                <dt class="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">
                  Administrators
                </dt>
                <dd id="admin-users" class="text-lg font-medium text-gray-900 dark:text-white">
                  Loading...
                </dd>
              </dl>
            </div>
          </div>
        </Card>

        <Card class="bg-white dark:bg-gray-800">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="w-8 h-8 bg-yellow-100 dark:bg-yellow-900 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-yellow-600 dark:text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                </svg>
              </div>
            </div>
            <div class="ml-5 w-0 flex-1">
              <dl>
                <dt class="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">
                  Pending Verification
                </dt>
                <dd id="pending-users" class="text-lg font-medium text-gray-900 dark:text-white">
                  Loading...
                </dd>
              </dl>
            </div>
          </div>
        </Card>
      </div>

      <!-- User Management -->
      <Card title="User Management" description="View and manage all user accounts.">
        <div class="mb-6">
          <div class="flex flex-col sm:flex-row gap-4">
            <div class="flex-1">
              <input
                type="text"
                id="search-users"
                placeholder="Search users by email, username, or name..."
                class="w-full rounded-md border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-800 px-3 py-2 text-sm placeholder-gray-500 dark:placeholder-gray-400 focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
              />
            </div>
            <Button variant="primary" id="search-btn">
              Search
            </Button>
          </div>
        </div>

        <!-- Users Table -->
        <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg">
          <table class="min-w-full divide-y divide-gray-300 dark:divide-gray-700">
            <thead class="bg-gray-50 dark:bg-gray-800">
              <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                  User
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                  Role
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                  Status
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                  Joined
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                  Actions
                </th>
              </tr>
            </thead>
            <tbody id="users-table-body" class="bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700">
              <tr>
                <td colspan="5" class="px-6 py-4 text-center text-sm text-gray-500 dark:text-gray-400">
                  Loading users...
                </td>
              </tr>
            </tbody>
          </table>
        </div>

        <!-- Pagination -->
        <div id="pagination" class="hidden mt-6 flex items-center justify-between">
          <div class="flex-1 flex justify-between sm:hidden">
            <Button variant="outline" id="prev-mobile">Previous</Button>
            <Button variant="outline" id="next-mobile">Next</Button>
          </div>
          <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
            <div>
              <p class="text-sm text-gray-700 dark:text-gray-300">
                Showing <span id="pagination-start">1</span> to <span id="pagination-end">10</span> of <span id="pagination-total">0</span> results
              </p>
            </div>
            <div>
              <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                <Button variant="outline" id="prev-desktop" class="rounded-l-md">Previous</Button>
                <Button variant="outline" id="next-desktop" class="rounded-r-md">Next</Button>
              </nav>
            </div>
          </div>
        </div>
      </Card>
    </div>
  </main>

  <script>
    let currentPage = 1;
    let currentSearch = '';
    const usersPerPage = 10;

    async function loadUsers(page = 1, search = '') {
      try {
        const params = new URLSearchParams({
          page: page.toString(),
          limit: usersPerPage.toString(),
          search: search
        });

        const response = await fetch(`/api/admin/users?${params}`);
        const result = await response.json();

        if (response.ok && result.success) {
          renderUsers(result.data.users);
          renderPagination(result.data.pagination);
          updateStats(result.data.users);
        } else {
          showError('Failed to load users');
        }
      } catch (error) {
        showError('Network error occurred');
      }
    }

    function renderUsers(users) {
      const tbody = document.getElementById('users-table-body');
      
      if (users.length === 0) {
        tbody.innerHTML = `
          <tr>
            <td colspan="5" class="px-6 py-4 text-center text-sm text-gray-500 dark:text-gray-400">
              No users found
            </td>
          </tr>
        `;
        return;
      }

      tbody.innerHTML = users.map(user => `
        <tr class="hover:bg-gray-50 dark:hover:bg-gray-800">
          <td class="px-6 py-4 whitespace-nowrap">
            <div class="flex items-center">
              <div class="flex-shrink-0 h-10 w-10">
                <div class="h-10 w-10 rounded-full bg-gray-300 dark:bg-gray-700 flex items-center justify-center">
                  <span class="text-sm font-medium text-gray-700 dark:text-gray-300">
                    ${user.firstName[0]}${user.lastName[0]}
                  </span>
                </div>
              </div>
              <div class="ml-4">
                <div class="text-sm font-medium text-gray-900 dark:text-white">
                  ${user.firstName} ${user.lastName}
                </div>
                <div class="text-sm text-gray-500 dark:text-gray-400">
                  ${user.email}
                </div>
                <div class="text-xs text-gray-400 dark:text-gray-500">
                  @${user.username}
                </div>
              </div>
            </div>
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
              user.role === 'admin' 
                ? 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200'
                : 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200'
            }">
              ${user.role}
            </span>
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            <div class="flex flex-col space-y-1">
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                user.isActive 
                  ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'
                  : 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'
              }">
                ${user.isActive ? 'Active' : 'Inactive'}
              </span>
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                user.isVerified 
                  ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'
                  : 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'
              }">
                ${user.isVerified ? 'Verified' : 'Pending'}
              </span>
            </div>
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
            ${new Date(user.createdAt * 1000).toLocaleDateString()}
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
            <button 
              onclick="editUser('${user.id}')" 
              class="text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-200 mr-3"
            >
              Edit
            </button>
            ${user.id !== '${user.id}' ? `
              <button 
                onclick="deleteUser('${user.id}')" 
                class="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-200"
              >
                Delete
              </button>
            ` : ''}
          </td>
        </tr>
      `).join('');
    }

    function renderPagination(pagination) {
      const paginationDiv = document.getElementById('pagination');
      
      if (pagination.totalPages <= 1) {
        paginationDiv.classList.add('hidden');
        return;
      }

      paginationDiv.classList.remove('hidden');
      
      document.getElementById('pagination-start').textContent = ((pagination.page - 1) * pagination.limit + 1).toString();
      document.getElementById('pagination-end').textContent = Math.min(pagination.page * pagination.limit, pagination.total).toString();
      document.getElementById('pagination-total').textContent = pagination.total.toString();

      // Update button states
      const prevButtons = document.querySelectorAll('#prev-mobile, #prev-desktop');
      const nextButtons = document.querySelectorAll('#next-mobile, #next-desktop');

      prevButtons.forEach(btn => {
        btn.disabled = !pagination.hasPrev;
        if (pagination.hasPrev) {
          btn.onclick = () => loadUsers(pagination.page - 1, currentSearch);
        }
      });

      nextButtons.forEach(btn => {
        btn.disabled = !pagination.hasNext;
        if (pagination.hasNext) {
          btn.onclick = () => loadUsers(pagination.page + 1, currentSearch);
        }
      });
    }

    function updateStats(users) {
      const totalUsers = users.length;
      const activeUsers = users.filter(u => u.isActive).length;
      const adminUsers = users.filter(u => u.role === 'admin').length;
      const pendingUsers = users.filter(u => !u.isVerified).length;

      // These would normally come from separate API calls for accurate counts
      document.getElementById('total-users').textContent = '2'; // Hardcoded for demo
      document.getElementById('active-users').textContent = '2';
      document.getElementById('admin-users').textContent = '1';
      document.getElementById('pending-users').textContent = '0';
    }

    function showError(message) {
      console.error(message);
      // Could implement toast notifications here
    }

    function editUser(userId) {
      // Implement user editing modal/page
      alert(`Edit user: ${userId}`);
    }

    function deleteUser(userId) {
      if (confirm('Are you sure you want to delete this user?')) {
        // Implement user deletion
        alert(`Delete user: ${userId}`);
      }
    }

    // Search functionality
    document.getElementById('search-btn').addEventListener('click', () => {
      const searchInput = document.getElementById('search-users') as HTMLInputElement;
      currentSearch = searchInput.value.trim();
      currentPage = 1;
      loadUsers(currentPage, currentSearch);
    });

    document.getElementById('search-users').addEventListener('keypress', (e) => {
      if (e.key === 'Enter') {
        document.getElementById('search-btn').click();
      }
    });

    // Load initial data
    loadUsers();
  </script>
</Layout>